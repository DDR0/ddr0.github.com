:ruby
	def blogContent #Compile the blog posts. They will look in the folder named after them for their resources. eg, 01.My Post.html.haml will look in the 01.My Post/ in the same directory for it's files. 01.My Post/file.ext is easily referenced by ~/file.ext. … I bet this is how Ruby on Rails started.
		counter = 1;
		buffer = Dir.glob(Dir.getwd+'/Blog Posts/*.html').
			sort!.#last(5000). We won't figure out multiple pages until we have to.
			map{|f| File.read(f). #TODO: Figure out how to use the gsub! function. Speed.
				gsub("~/", "Blog Posts/#{File.basename(f, '.*')}/").
				gsub("~\\/", "~/")}.
			reverse!.join("\n\n\n\n\n\n<hr>\n\n\n\n\n\n")
	end

!!!
%html{"lang"=>"en"}
	%head
		%meta{"charset"=>"utf-8"}
		%title Blog
		%link{"rel"=>"stylesheet", "href"=>"css/Grey and Blue.css"}
		%link{"rel"=>"stylesheet", "href"=>"css/Blog.css"}
	%body
		%a{id:"skip-nav", href:"#content"}Skip navigation.
		#badge<
			%img{"src"=>"images/icons/page.svg", "alt"=>""}> 
			-#This is the background icon to display.
		#icon-bar
			%a{"href"=>"blog.html"}<
				%img{"src"=>"images/icons/page.svg", "alt"=>""}>
				%div blog
			%a{"href"=>"gallery.html"}<
				%img{"src"=>"images/icons/work.svg", "alt"=>""}>
				%div gallery
			%a{"href"=>"contact.html"}<
				%img{"src"=>"images/icons/chat2.svg", "alt"=>""}>
				%div contact
			%a{"href"=>"rss.xml"}<
				%img{"src"=>"images/icons/rss.svg", "alt"=>""}>
				%div rss
		#content-holder
			%h1<
				%img{"src"=>"images/text-blog.png", "alt"=>"blog"}
			%a{name:"content"}
			#content-pane=blogContent
	%footer	Site ©2013 David Roberts.