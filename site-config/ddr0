# Fragment for NGINX "default" server, which serves the bulk of the website.
# Some stuff gets proxied to Node scripts, some stuff doesn't get served at all.

# Use like `include /etc/nginx/default/ddr0` in the default block of the server.

#root /var/www/html;
index index.html;
gzip_types text/plain text/css image/svg+xml application/xml application/javascript image/gif ;

# Allow access for letsencrypt/certbot.
location ~ /\.well-known { 
	allow all;
}

#Otherwise, don't serve hidden files. (Not that there should be any.)
location ~ /\. { 
    deny all;
}

location / {
	# First attempt to serve request as file, then
	# as directory, then fall back to displaying a 404.
	try_files $uri $uri/index.html $uri/ =404;
	
	#We should switch to a better cache-control scheme, where content gets hashed.
	add_header Cache-Control "max-age=900";
	
	set $CSP         "default-src 'self'; object-src 'none'";
	set $CSP "${CSP}; script-src 'self' 'unsafe-inline'";
	set $CSP "${CSP}; img-src 'self' data:";
	set $CSP "${CSP}; style-src 'self' 'unsafe-inline'";
	add_header Content-Security-Policy "${CSP}";
}


location /⚀/rolls {
	proxy_pass http://localhost:8301;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

location /⚁/ws {
	rewrite ^/⚁/ws/(.*) /socket.io/$1 break;
	proxy_pass http://localhost:8302;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}
