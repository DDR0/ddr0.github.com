# Fragment for NGINX "default" server, which serves the bulk of the website.
# Some stuff gets proxied to Node scripts, some stuff doesn't get served at all.

# Use like `include /etc/nginx/site-fragments/ddr0;` in the default block of the server.

#root /var/www/html;
index index.html;
gzip_types text/plain text/css image/svg+xml application/xml application/javascript image/gif;
server_tokens off;

#Set up CSP for use later. Use CSP_REPORT in conjunction with REPORT_TO and NEL.
set $CSP_BASE   "default-src 'self'; object-src 'none'; frame-ancestors 'self'";
set $CSP_REPORT "report-uri https://ddr0.report-uri.com/r/d/csp/enforce; report-to default";
set $CSP_SCRIPT "script-src 'self' 'unsafe-inline' 'unsafe-eval'";
set $CSP_IMG    "img-src 'self' data:";
set $CSP_STYLE  "style-src 'self' 'unsafe-inline'";
#Use https://report-uri.com to, well, gather reports. (NEL, network logging, is experimental.)
set $REPORT_TO  '{"group":"default","max_age":2628000,"endpoints":[{"url":"https://ddr0.report-uri.com/a/d/g"}],"include_subdomains":true}';
set $NEL        '{"report_to":"default","max_age":31536000,"include_subdomains":true}';

# Allow access for letsencrypt/certbot.
location ~ /\.well-known { 
	allow all;
}

#Otherwise, don't serve hidden files. (Not that there should be any.)
location ~ /\. { 
    deny all;
}


location ~ /⚀/rolls {
	proxy_pass http://localhost:8301;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location ~ /⚁/ws {
	rewrite ^/⚁/ws/(.*) /socket.io/$1 break;
	proxy_pass http://localhost:8302;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location ~ /⚂/ws {
	rewrite ^/⚂/ws/(.*) /socket.io/$1 break;
	proxy_pass http://localhost:8303;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}


location = /gallery.html {
	set $SCRIPTS "https://code.jquery.com/jquery-2.0.0.min.js https://code.createjs.com/preloadjs-0.3.0.min.js";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location ~ "^/cube trains/.*\.html$" {
	set $PAYPAL_IMG "https://www.paypalobjects.com";
	set $MIXPANEL_SCRIPTS "https://api.mixpanel.com";
	set $CSP_FRAME "frame-src https://www.youtube.com https://w.soundcloud.com";
	set $CSP_CONNECT "connect-src ${MIXPANEL_SCRIPTS}";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${MIXPANEL_SCRIPTS}; ${CSP_IMG} ${PAYPAL_IMG}; ${CSP_STYLE}; ${CSP_FRAME}; ${CSP_CONNECT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location / {
	# First attempt to serve request as file, then
	# as directory, then fall back to displaying a 404.
	try_files $uri $uri/index.html $uri/ $uri.html =404;
	
	#We should switch to a better cache-control scheme, where content gets hashed.
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Content-Type "text/html; charset=utf-8";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location ~ "^/.*\.html$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Content-Type "text/html; charset=utf-8";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

#Fix web worker imports in https://ddr0.ca/editabled/fullscreen.html not working because CSP is being applied relative to them.
location ~ "^/.*\.js$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "default-src 'none'; script-src 'self'; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

#Fix web worker imports in https://ddr0.ca/editabled/fullscreen.html not working because CSP is being applied relative to them.
location ~ "^/.*\.svg$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

#RSS feeds are the only XML we have on site.
location ~ "^/.*\.xml$" {
	types { } default_type "application/rss+xml; charset=utf-8";
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}

location ~ "^/.*\.*$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "default-src 'none'; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
}