# Fragment for NGINX "default" server, which serves the bulk of the website.
# Some stuff gets proxied to Node scripts, some stuff doesn't get served at all.

# Use like `include /etc/nginx/site-fragments/ddr0;` in the default block of the server.

# TODO: We should switch to a better caching scheme, where content gets ID'd by hash.

#root /var/www/html;
index index.html;
gzip_types text/plain text/css image/svg+xml application/xml application/javascript image/gif;
server_tokens off;
charset utf-8;

#Set up CSP for use later. Use CSP_REPORT in conjunction with REPORT_TO and NEL.
set $CSP_BASE   "default-src 'self'; object-src 'none'; frame-ancestors 'self'";
set $CSP_REPORT "report-uri https://ddr0.report-uri.com/r/d/csp/enforce; report-to default";
set $CSP_SCRIPT "script-src 'self' 'unsafe-inline' 'unsafe-eval'";
set $CSP_IMG    "img-src 'self' data:";
set $CSP_STYLE  "style-src 'self' 'unsafe-inline'";
#Use https://report-uri.com to, well, gather reports. (NEL, network logging, is experimental.)
set $REPORT_TO  '{"group":"default","max_age":2628000,"endpoints":[{"url":"https://ddr0.report-uri.com/a/d/g"}],"include_subdomains":true}';
set $NEL        '{"report_to":"default","max_age":31536000,"include_subdomains":true}';

# Allow access for letsencrypt/certbot.
location ~ /\.well-known { 
	allow all;
}

#Otherwise, don't serve hidden files. (Not that there should be any.)
location ~ /\. { 
    deny all;
}


location ~ /⚀/rolls {
	proxy_pass http://localhost:8301;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	
	#add_header X-Debug 10;
}

location ~ /⚁/ws {
	rewrite ^/⚁/ws/(.*) /socket.io/$1 break;
	proxy_pass http://localhost:8302;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	
	#add_header X-Debug 11;
}

location ~ /⚂/ws {
	rewrite ^/⚂/ws/(.*) /socket.io/$1 break;
	proxy_pass http://localhost:8303;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	
	#add_header X-Debug 12;
}

#Fix web worker imports in https://ddr0.ca/editabled/fullscreen.html not working because CSP is being applied relative to them.
location ~ "^/.*\.js$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "default-src 'none'; script-src 'self'; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	
	#add_header X-Debug 19;
}

#Fix web worker imports in https://ddr0.ca/editabled/fullscreen.html not working because CSP is being applied relative to them.
location ~ "^/.*\.svg$" {
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	
	#add_header X-Debug 20;
}

#RSS feeds are the only XML we have on site.
location ~ "^/.*\.xml$" {
	types { } default_type "application/rss+xml; charset=utf-8";
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	
	#add_header X-Debug 21;
}

location ~ "\.html$" {
	rewrite ^(.*?)\.html$ $1 permanent;
}

#Renamed a blog post.
location ~ "^/blog-posts/13\.Shared_Array_Buffer_With_WASM$" {
	return 301 /blog-posts/13.Shared_Array_Buffers_With_WASM;
}


location ~ "^/gallery(:?\.html)?$" {
	try_files $uri $uri.html =404;
	
	set $SCRIPTS "https://code.jquery.com/jquery-2.0.0.min.js https://code.createjs.com/preloadjs-0.3.0.min.js";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${SCRIPTS}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "unsafe-none";
	add_header Cross-Origin-Embedder-Policy "unsafe-none";
	
	#add_header X-Debug 13;
}

#Must make request from project folder, because of relative URLs.
location ~ "^/(?:cube trains|editabled)$" {
	return 301 $request_uri/;
}

location ~ "^/cube trains/[^\.]*(?:\.html)?$" {
	try_files $uri $uri.html $uri/index.html =404;
	
	set $PAYPAL_IMG "https://www.paypalobjects.com";
	set $MIXPANEL_SCRIPTS "https://api.mixpanel.com";
	set $CSP_FRAME "frame-src https://www.youtube.com https://w.soundcloud.com";
	set $CSP_CONNECT "connect-src ${MIXPANEL_SCRIPTS}";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT} ${MIXPANEL_SCRIPTS}; ${CSP_IMG} ${PAYPAL_IMG}; ${CSP_STYLE}; ${CSP_FRAME}; ${CSP_CONNECT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	
	#add_header X-Debug 14;
}

location ~ "^/(?:blog-posts/\d+\.)?[^\.]*(?:\.html)?$" {
	try_files $uri $uri.html $uri/index.html =404;
	
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${CSP_BASE}; ${CSP_REPORT}; ${CSP_SCRIPT}; ${CSP_IMG}; ${CSP_STYLE}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	
	#add_header X-Debug 16;
}

#Note: The default location probably isn't going to be hit by anything any more, given everything either has an extension and is at least caught by the catchall block above, or doesn't have an extension and fails in the html block.
location / {
	set $DENY_ALL "default-src 'none'; object-src 'none'; frame-ancestors 'none'";
	set $BUT_ALLOW_THE_FAVICON "img-src https://ddr0.ca/favicon.ico"; #Doesn't work in development mode.
	add_header Cache-Control "max-age=900";
	add_header Content-Security-Policy "${DENY_ALL}; ${BUT_ALLOW_THE_FAVICON}; ${CSP_REPORT}";
	add_header Report-To "${REPORT_TO}";
	add_header NEL "${NEL}";
	add_header Cross-Origin-Opener-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	
	#add_header X-Debug 17;
}